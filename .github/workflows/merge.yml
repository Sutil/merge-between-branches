name: Mesclar branchs
on:
  workflow_dispatch:
    inputs:
      project:
        description: 'Projeto que deseja executar esta ação'
        required: true
        default: 'Sutil/merge-between-branches'
      baseBranch:
        description: 'master ou development'
        required: true
        default: master
      branchs:
        description: 'Branchs que irão ser colocadas em hmg'
        required: true
        default: dev1
      target:
        description: 'Branch alvo'
        required: true
        default: hmg


jobs:
  sync-branch:
    runs-on: ubuntu-latest
    steps:

      - name: Create folder
        run: mkdir project

      - name: Checkout
        uses: actions/checkout@master
        continue-on-error: true
        with:
          repository: ${{ github.event.inputs.project }}
          ref: ${{ github.event.inputs.target }}
          path: project
          token: ${{ secrets.TOKEN }}

      - name: See all paths
        run: ls project

      - name: Marge informations
        run: |
          cd project

          echo "======= Dentro da branch project ==========="

          ls 

          echo "============================================"

          git config --global user.name ${{ github.actor }}
          git config --global user.email ${{ github.actor }}@users.noreply.github.com
          git config --global user.password ${{ secrets.TOKEN }}


          arr=${{github.event.inputs.branchs}}
          IFS=',' read -ra CLIS <<< "$arr"
          for branch in "${CLIS[@]}"; do
            echo "=============== Fething all ====================="

            git fetch --all

            echo "=============== Atualizado destino (${{ github.event.inputs.target }}) com branch base ====================="
            git pull origin ${{ github.event.inputs.baseBranch }}--no-edit

            echo "=============== Atualizado origem com branch base ====================="
            git checkout ${branch}
            git pull origin ${{ github.event.inputs.baseBranch }}--no-edit

            echo "=============== pull origin ${branch} ====================="
            git checkout ${{ github.event.inputs.target }}
            git pull origin ${branch}--no-edit

            echo "=========== enviando ${{ github.event.inputs.target }} para o repo ========== "
            git pull origin ${{ github.event.inputs.target }}--no-edit
            git push origin ${{ github.event.inputs.target }}

            echo "=========== Merge concluido na branch ${branch} ========== "
          done

        

